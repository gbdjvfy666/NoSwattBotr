from aiogram import Router, types, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart
from config import RECEIVER_ADDRESS
from database import add_user
from aiogram.utils.markdown import hlink

router = Router()

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
REF_LINK = "https://1wmndv.life/?p=mvmr"
SUPPORT_LINK = "https://t.me/noswattw"
CLOSED_CHANNEL = "ITL"
CHECK_CHANNEL = "@noswattt"  # –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏

# === –ú–µ–Ω—é ===
def main_menu():
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üéÅ –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å 500%", callback_data="get_bonus")],
        [InlineKeyboardButton(text="üìò –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç?", callback_data="how_to_deposit")],
        [InlineKeyboardButton(text="üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url=SUPPORT_LINK)]
    ])

# === –ö–æ–º–∞–Ω–¥–∞ /start ===
@router.message(CommandStart())
async def cmd_start(message: Message, bot):
    await add_user(
        tg_id=message.from_user.id,
        username=message.from_user.username,
        full_name=message.from_user.full_name
    )

    welcome_text = (
        f"üëã –ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n\n"
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ üß† NoSwatt!\n\n"
        "üìå –ó–¥–µ—Å—å —Ç—ã –ø–æ–ª—É—á–∏—à—å:\n"
        "‚Äî üéÅ –ë–æ–Ω—É—Å 500% –Ω–∞ 1win\n"
        "‚Äî üìò –ü–æ—à–∞–≥–æ–≤—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é\n"
        "‚Äî üîê –î–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π Telegram-–∫–∞–Ω–∞–ª\n\n"
        "üëá –í—ã–±–∏—Ä–∞–π, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å:"
    )

    await message.answer(welcome_text, reply_markup=main_menu())

# === –ö–Ω–æ–ø–∫–∞: –ü–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å ===
@router.callback_query(F.data == "get_bonus")
async def handle_bonus(callback: CallbackQuery, bot):
    user_id = callback.from_user.id

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏
    try:
        member = await bot.get_chat_member(chat_id=CHECK_CHANNEL, user_id=user_id)
        if member.status not in ("member", "administrator", "creator"):
            raise ValueError("not subscribed")
    except:
        await callback.message.answer("‚ùó –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª:", reply_markup=InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(text="üì¢ –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–Ω–∞–ª", url="https://t.me/noswattt")],
                [InlineKeyboardButton(text="‚úÖ –Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è", callback_data="check_sub")]
            ]
        ))
        return

    # –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–µ:
    await callback.message.answer(
        "‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n\nüìò –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:\n"
        "1. –ü–µ—Ä–µ–π–¥–∏ –ø–æ –∫–Ω–æ–ø–∫–µ –∏ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è\n"
        "2. –°–æ–≤–µ—Ä—à–∏ –¥–µ–ø–æ–∑–∏—Ç\n"
        "3. –ü–æ–ª—É—á–∏ –¥–æ 500% –±–æ–Ω—É—Å–æ–≤\n\n"
        "–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Ç–µ–±–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –∫–∞–Ω–∞–ª —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏ üëá",
        reply_markup=InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîó –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ 1win", url=REF_LINK)],
            [InlineKeyboardButton(text="üö™ –í–æ–π—Ç–∏ –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª", url=f"https://t.me/+s6J8oZOnS-M5ZjRi")]
        ])
    )

# === –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ ===
@router.callback_query(F.data == "check_sub")
async def check_subscription(callback: CallbackQuery, bot):
    user_id = callback.from_user.id

    try:
        member = await bot.get_chat_member(chat_id=CHECK_CHANNEL, user_id=user_id)
        if member.status not in ("member", "administrator", "creator"):
            raise ValueError("not subscribed")
    except:
        await callback.message.answer("‚ùå –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏.")
        return

    await callback.message.answer("‚úÖ –ü–æ–¥–ø–∏—Å–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞!\n–¢—ã –ø–æ–ª—É—á–∞–µ—à—å –±–æ–Ω—É—Å –Ω–∞ 1win –∏ –¥–æ—Å—Ç—É–ø –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª —Å –ø—Ä–æ–≥–Ω–æ–∑–∞–º–∏.", reply_markup=InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üîó –ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –±–æ–Ω—É—Å", url=REF_LINK)],
        [InlineKeyboardButton(text="üö™ –ü–æ—Å—Ç—É—á–∞—Ç—å—Å—è –≤ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª", url=f"https://t.me/+s6J8oZOnS-M5ZjRi")]
    ]))

# === –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç ===
@router.callback_query(F.data == "how_to_deposit")
async def how_to_deposit(callback: CallbackQuery):
    text = (
        "üìò –ö–∞–∫ —Å–¥–µ–ª–∞—Ç—å –¥–µ–ø–æ–∑–∏—Ç –Ω–∞ 1win:\n\n"
        "1. –ü–µ—Ä–µ–π–¥–∏ –Ω–∞ —Å–∞–π—Ç 1win: " + f"https://1wmndv.life/?p=mvmr" + "\n"
        "2. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è\n"
        "3. –ü–µ—Ä–µ–π–¥–∏ –≤ —Ä–∞–∑–¥–µ–ª ¬´–ö–∞—Å—Å–∞¬ª\n"
        "4. –í—ã–±–µ—Ä–∏ —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\n"
        "5. –ü–æ–ø–æ–ª–Ω–∏ –±–∞–ª–∞–Ω—Å –∏ –ø–æ–ª—É—á–∏ –±–æ–Ω—É—Å üéÅ"
    )
    await callback.message.answer(text, parse_mode="HTML")
    