from aiogram import Router, F
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from database import get_or_create_user, get_user_profile
import asyncio
router = Router()

@router.message(F.text == "ü™™ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å")
async def profile_handler(message: Message):
    
    await message.answer_sticker("CAACAgEAAxkBAAEP9ExoUudPQIu6fJYvt7IVC2Z-XzLvXwACugIAAiz4MEQksGc-EyV1qTYE")
    await asyncio.sleep(0.3)

    user_id = message.from_user.id
    await get_or_create_user(user_id)

    profile = await get_user_profile(user_id)
    if not profile:
        await message.answer("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è.")
        return

    registration_date, balance, partner_balance, purchases = profile

    text = (
        "ü™™ <b>–ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å</b>\n\n"
        f"ID: <code>{user_id}</code>\n"
        f"–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: {registration_date}\n\n"
        f"–û—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å: <b>{balance}‚ÇΩ</b>\n"
        f"–ü–∞—Ä—Ç–Ω–µ—Ä—Å–∫–∏–π –±–∞–ª–∞–Ω—Å: <b>{partner_balance}‚ÇΩ</b>\n\n"
        "üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</b>\n"
        f"–í—Å–µ–≥–æ –ø–æ–∫—É–ø–æ–∫: <b>{purchases}</b>"
    )

    # –°–æ–∑–¥–∞–µ–º inline-–∫–Ω–æ–ø–∫–∏
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data="my_orders"),
         InlineKeyboardButton(text="üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å", callback_data="top_up")],
        [InlineKeyboardButton(text="üë• –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", callback_data="referral_program")]
    ])

    await message.answer(text, parse_mode="HTML", reply_markup=markup)
