from aiogram import Router, F, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
import asyncio

router = Router()

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "üÜò –°–≤—è–∑–∞—Ç—å—Å—è —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π"
@router.message(F.text == "üì© –°–≤—è–∑–∞—Ç—å—Å—è")
async def support_main(message: types.Message):
    await message.answer_sticker("CAACAgEAAxkBAAEP9JBoUu3FQj3Bri3TkCFSDEaegKUfUgACNQIAAtkboEY5xCjIsSP_yTYE")
    await asyncio.sleep(0.3)
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì® –°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ", callback_data="support_create")],
        [InlineKeyboardButton(text="üìÇ –ú–æ–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è", callback_data="support_my_tickets")]
    ])
    await message.answer("üõ† –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏:", reply_markup=markup)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ "–°–æ–∑–¥–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ"
@router.callback_query(F.data == "support_create")
async def choose_topic(callback: types.CallbackQuery):
    markup = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì¶ –ü—Ä–æ–±–ª–µ–º–∞ —Å –∑–∞–∫–∞–∑–æ–º", callback_data="topic_order")],
        [InlineKeyboardButton(text="üí≥ –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ–º", callback_data="topic_topup")],
        [InlineKeyboardButton(text="üí∞ –ü—Ä–æ–±–ª–µ–º–∞ —Å –æ–ø–ª–∞—Ç–æ–π", callback_data="topic_payment")],
        [InlineKeyboardButton(text="üìã –í–æ–ø—Ä–æ—Å –ø–æ —Ç–æ–≤–∞—Ä—É", callback_data="topic_product")],
        [InlineKeyboardButton(text="üîô –ù–∞–∑–∞–¥", callback_data="back_to_support")]
    ])
    await callback.message.edit_text(
        "üÜò <b>–°–ª—É–∂–±–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ ‚Ä∫ –í—ã–±–æ—Ä —Ç–µ–º—ã</b>\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–µ–º—É –æ–±—Ä–∞—â–µ–Ω–∏—è:",
        reply_markup=markup,
        parse_mode="HTML"
    )
    await callback.answer()


# –û–±—Ä–∞–±–æ—Ç–∫–∞ "–ù–∞–∑–∞–¥" –≤ –≤—ã–±–æ—Ä —Ç–µ–º—ã
@router.callback_query(F.data == "back_to_support")
async def back_to_support(callback: types.CallbackQuery):
    await support_main(callback.message)
    await callback.answer()
